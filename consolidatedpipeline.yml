trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release' 
  ${{ if eq(variables['build.SourceBranchName'], 'main') }}:
    group: armtemplates-dev

pool:
  name: Azure Pipelines
  vmImage: 'vs2017-win2016'

stages:
- stage: Build
  jobs:
  - job: Build     
    pool:
     vmImage: 'windows-2019'     
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage: DeployDev
  variables:
  - ${{ if eq(variables['build.SourceBranchName'], 'main') }}:
    - group: armtemplates-dev

  displayName: 'Deploy'
  jobs:  
  - job: 'Deploy'  
    pool:
     vmImage: 'windows-2019'
    steps:

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)'


      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          Contents: '**'
          TargetFolder: '$(build.artifactstagingdirectory)'

      - task: replacetokens@3
        inputs:
          rootDirectory: '$(build.artifactstagingdirectory)/drop'
          targetFiles: 'azuredeploy.parameters.json'
          encoding: 'auto'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          tokenPrefix: '#'
          tokenSuffix: '#'
          useLegacyPattern: false
          enableTransforms: false
          enableTelemetry: true
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: ''
          subscriptionId: ''
          action: 'Create Or Update Resource Group'
          resourceGroupName: $(resourcegroup-dev)
          location: $(location)
          templateLocation: 'Linked artifact'
          csmFile: '$(build.artifactstagingdirectory)/drop/Fastcarwebapp/templates/azuredeploy.json'
          csmParametersFile: '$(build.artifactstagingdirectory)/drop/Fastcarwebapp/templates/azuredeploy.parameters.json'
          overrideParameters: '-appBaseName $(arm-appBaseName) -appBaseSkuName "F1"'
          deploymentMode: 'Incremental'

      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: ''
          appType: 'webApp'
          WebAppName: '$(arm-appBaseName)'
          packageForLinux: '$(build.artifactstagingdirectory)/**/*.zip'
